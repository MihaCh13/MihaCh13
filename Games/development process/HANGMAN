using System;
using System.Collections.Generic;
using System.Text;

class Program
{
    static void Main()
    {
        Console.WriteLine("-=HANGMAN=-");

        string wordToGuess = GetRandomWord();

        Console.WriteLine("  _____");
        Console.WriteLine(" |     |");
        Console.WriteLine(" | ");
        Console.WriteLine(" | ");
        Console.WriteLine(" | ");
        Console.WriteLine(" | ");
        Console.WriteLine(" | ");
        Console.WriteLine("===");

        Console.WriteLine();

        int wrongAttempts = 0;
        List<char> guessedLetters = new List<char>();
        StringBuilder newString = new StringBuilder('_', wordToGuess.Length);

        while (wrongAttempts < 6)
        {
            Console.WriteLine("Guess a letter:");
            Console.WriteLine();
            Console.WriteLine(newString.ToString());
            Console.WriteLine();

            char currentChar = char.Parse(Console.ReadLine());

            if (!guessedLetters.Contains(currentChar))
            {
                guessedLetters.Add(currentChar);
            }
            else
            {
                Console.WriteLine($"You have already tried the letter '{currentChar}'!");
                Console.WriteLine();
                continue;
            }

            if (!wordToGuess.Contains(currentChar))
            {
                wrongAttempts++;

                DisplayHangman(wrongAttempts);

                Console.WriteLine($"The letter '{currentChar}' is wrong !");
                Console.WriteLine();
            }
            else
            {
                for (int i = 0; i < wordToGuess.Length; i++)
                {
                    if (wordToGuess[i] == currentChar)
                    {
                        newString[i] = currentChar;
                    }
                }

                Console.WriteLine();
                Console.WriteLine("Correct!");
                Console.WriteLine();
            }

            if (newString.ToString() == wordToGuess)
            {
                Console.WriteLine(newString.ToString());
                Console.WriteLine();
                Console.WriteLine("YOU WIN!");
                break;
            }
        }

        if (wrongAttempts == 6)
        {
            Console.WriteLine();
            Console.WriteLine($"The correct word is '{wordToGuess}'.");
            Console.WriteLine();
            Console.WriteLine("-=GAME OVER=-");
        }
    }

    static string GetRandomWord()
    {
        Console.WriteLine("Choose number of players: ");
        int players = int.Parse(Console.ReadLine());

        string[] words = null;

        if (players > 1)
        {
            Console.WriteLine("Enter a word");
            return Console.ReadLine();
        }
        else
        {
            Console.WriteLine("Choose category:");
            Console.WriteLine("Geography & Nature | History | Biology | Family | Countries | Animals | Food | Subjects");
            string category = Console.ReadLine();

            if (category == "Geography & Nature")
            {
                words = new string[] { "mountain", "horizon", "flower", "river", "clouds", "sunset", "beach", "starlight", "raindrop", "butterfly", "sapphire", "peak", "ocean", "earthquake", "hill", "lake", "valley" };
            }
            else if (category == "History")
            {
                words = new string[] { "history", "timeline", "events", "evolution", "progression", "development", "milestones", "origins", "legacy", "revolution", "growth", "advancement", "achievements", "changes" };
            }
            else if (category == "Biology")
            {
                words = new string[] { "biology", "anatomy", "physiology", "cells", "evolution", "genetics", "ecology", "taxonomy", "biodiversity", "microbiology", "botany", "zoology", "ecosystem", "adaptation", "reproduction" };
            }
            else if (category == "Family")
            {
                words = new string[] { "family", "relatives", "generations", "lineage", "ancestors", "siblings", "kin", "clan", "household", "descendants", "heritage", "bloodline", "forebears", "progeny", "sister", "brother", "mother", "father", "aun", "uncle", "grandma", "grandpa", "grandparents" };
            }
            else if (category == "Countries")
            {
                words = new string[] { "Canada", "USA", "UK", "France", "Germany", "China", "Japan", "Brazil", "India", "Australia", "Russia", "Mexico", "Argentina", "Italy", "Bulgaria", "Spain" };
            }
            else if (category == "Animals")
            {
                words = new string[] { "mammals", "reptiles", "birds", "fish", "amphibians", "insect", "mollusk", "arachnids", "lion", "elephant", "dolphin", "penguin", "tiger", "koala", "giraffe", "cheetah", "kangaroo", "gorilla", "eagle", "bear", "crocodile", "octopus", "antelope" };
            }
            else if (category == "Food")
            {
                words = new string[] { "pizza", "salad", "spaghetti", "sushi", "burgers", "chocolate", "tacos", "pancakes", "steak", "sandwich", "soup", "popcorn", "curry", "rice", "apple" };
            }
            else if (category == "Subjects")
            {
                words = new string[] { "candle", "sofa", "laptop", "backpack", "sunglasses", "book", "bookshelf", "headphones", "clock", "umbrella", "mirror", "plant", "pillow", "blanket", "lamp" };
            }
        }

        Random random = new Random();
        int randomWordIndex = random.Next(words.Length);

        return words[randomWordIndex];
    }

    static void DisplayHangman(int wrongAttempts)
    {
        Console.WriteLine("  _____");
        Console.WriteLine(" |     |");
        Console.WriteLine(" |     O");

        if (wrongAttempts >= 2)
            Console.WriteLine(" |    \\|");

        if (wrongAttempts >= 3)
            Console.WriteLine(" |    \\|/");

        if (wrongAttempts >= 4)
            Console.WriteLine(" |     |");

        if (wrongAttempts >= 5)
            Console.WriteLine(" |    /");

        if (wrongAttempts >= 6)
            Console.WriteLine(" |    / \\");
        
        Console.WriteLine(" | ");
        Console.WriteLine("===");
        Console.WriteLine();
    }
}
